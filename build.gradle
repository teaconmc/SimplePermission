import java.time.Instant
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.4.8'
group = 'org.teacon'
archivesBaseName = 'SimplePermission-Forge-1.16'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                simple_perm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run_server')
            property 'forge.logging.console.level', 'info'
            mods {
                simple_perm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            args '--mod', 'simple_permission', '--all', '--output', file('src/generated/resources/')
            mods {
                simple_perm {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.48'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Simple-Permission",
            "Specification-Vendor": "TeaConMC",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "TeaConMC",
            "Implementation-Timestamp": DateTimeFormatter.ISO_INSTANT.format(Instant.now().truncatedTo(ChronoUnit.SECONDS))
        ])
    }
}

jar.finalizedBy('reobfJar')
publish.dependsOn('reobfJar')
publishing {
    publications {
        release(MavenPublication) {
            groupId = "org.teacon"
            artifactId = "SimplePermission-Forge-1.16"

            artifact jar
            pom {
                name = 'SimplePermission for Minecraft 1.16'
                description = 'A minimalistic permission management mod'
                url = 'https://github.com/teaconmc/SimplePermission'
                licenses {
                    license {
                        name = 'BSD-3-Clause'
                        url = 'https://github.com/teaconmc/SimplePermission/blob/1.16-forge/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = '3TUSK'
                        name = '3TUSK'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/teaconmc/SimplePermission/issues'
                }
                scm {
                    url = 'https://github.com/teaconmc/SimplePermission'
                    connection = 'scm:git:git://github.com/teaconmc/SimplePermission.git'
                    developerConnection = 'scm:git:git@github.com:teaconmc/SimplePermission.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "teacon"
            url = "s3://maven/"
            credentials(AwsCredentials) {
                accessKey = System.env.ARCHIVE_ACCESS_KEY
                secretKey = System.env.ARCHIVE_SECRET_KEY
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        System.env.ARCHIVE_ACCESS_KEY && System.env.ARCHIVE_SECRET_KEY
    }
}

/**
 * A simple task to pass down the artifact name and path to other GitHub actions.
 */
task("githubActionOutput") {
    onlyIf {
        System.env.GITHUB_ACTIONS
    }
    doLast {
        println "::set-output name=artifact_path::${jar.archiveFile.get().asFile.absolutePath}"
        println "::set-output name=artifact_name::${jar.archiveFileName.get()}"
    }
}
